---
version: 1.0.0
{{- include "newline" . -}}

{{- $globalScope := .Values.global -}}
{{- $chartValue := omit .Values "global" -}}
{{- $files := .Files -}}
{{- $template := .Template -}}

{{- /* ===================================================== */ -}}
{{- /* Overwrite configuration from env-specific values file */ -}}
{{- /* ===================================================== */ -}}
{{- $values := .Files.Glob (printf "values.%s.yaml" .Values.global.env) -}}
{{- $currentScope := . -}}
{{- range $path, $_ :=  $values -}}
{{- $content := tpl ($.Files.Get $path) $currentScope | fromYaml -}}
{{- $other := mergeOverwrite $globalScope $content.global -}}
{{- end -}}

{{- $configuration := (merge (dict "Files" $files) (dict "Template" $template ) (dict "env" $globalScope.env) (dict "global" $globalScope)) -}}
{{- include "generate" $configuration -}}

items:
{{ range $key, $value := $globalScope.items -}}
{{- if (or (has "all" .envs) (has $globalScope.env .envs)) -}}
- key: {{ $key }}
{{- $items := include "load.items.values" (merge $configuration (dict "itemName" $key)) | fromYaml -}}
{{ $items }}
{{- /* include "generate-item" (merge $items (merge $configuration (dict "itemName" $key))) | indent 2 */ -}}
{{ end }}
{{ end }}